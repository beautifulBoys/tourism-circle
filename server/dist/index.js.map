{"version":3,"sources":["../src/index.js"],"names":["app","require","debug","http","port","normalizePort","project_port","set","server","createServer","listen","on","onError","onListening","val","parseInt","isNaN","error","syscall","bind","code","console","process","exit","addr","address","log"],"mappings":";;AASA;;;;;;AAPA;;;;AAIA,IAAIA,MAAMC,QAAQ,UAAR,CAAV;AACA,IAAIC,QAAQD,QAAQ,OAAR,EAAiB,UAAjB,CAAZ;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;;;AAGA;;;;AAIA,IAAIG,OAAOC,cAAc,gBAAOC,YAArB,CAAX;AACAN,IAAIO,GAAJ,CAAQ,MAAR,EAAgBH,IAAhB;;AAEA;;;;AAIA,IAAII,SAASL,KAAKM,YAAL,CAAkBT,GAAlB,CAAb;;AAEA;;;;AAIAQ,OAAOE,MAAP,CAAcN,IAAd;AACAI,OAAOG,EAAP,CAAU,OAAV,EAAmBC,OAAnB;AACAJ,OAAOG,EAAP,CAAU,WAAV,EAAuBE,WAAvB;;AAEA;;;;AAIA,SAASR,aAAT,CAAuBS,GAAvB,EAA4B;AAC1B,MAAIV,OAAOW,SAASD,GAAT,EAAc,EAAd,CAAX;;AAEA,MAAIE,MAAMZ,IAAN,CAAJ,EAAiB;AACf;AACA,WAAOU,GAAP;AACD;;AAED,MAAIV,QAAQ,CAAZ,EAAe;AACb;AACA,WAAOA,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED;;;;AAIA,SAASQ,OAAT,CAAiBK,KAAjB,EAAwB;AACtB,MAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;;AAED,MAAIE,OAAO,OAAOf,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,IAFd;;AAIA;AACA,UAAQa,MAAMG,IAAd;AACE,SAAK,QAAL;AACEC,cAAQJ,KAAR,CAAcE,OAAO,+BAArB;AACAG,cAAQC,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACEF,cAAQJ,KAAR,CAAcE,OAAO,oBAArB;AACAG,cAAQC,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAMN,KAAN;AAVJ;AAYD;;AAED;;;;AAIA,SAASJ,WAAT,GAAuB;AACrB,MAAIW,OAAOhB,OAAOiB,OAAP,EAAX;AACAJ,UAAQK,GAAR,CAAY,WAAWtB,IAAvB;AACA,MAAIe,OAAO,OAAOK,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,KAAKpB,IAFnB;AAGAF,QAAM,kBAAkBiB,IAAxB;AACD","file":"index.js","sourcesContent":["\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar app = require('./app.js');\r\nvar debug = require('debug')('a:server');\r\nvar http = require('http');\r\nimport config from './config/index.js';\r\n\r\n/**\r\n * Get port from environment and store in Express.\r\n */\r\n\r\nvar port = normalizePort(config.project_port);\r\napp.set('port', port);\r\n\r\n/**\r\n * Create HTTP server.\r\n */\r\n\r\nvar server = http.createServer(app);\r\n\r\n/**\r\n * Listen on provided port, on all network interfaces.\r\n */\r\n\r\nserver.listen(port);\r\nserver.on('error', onError);\r\nserver.on('listening', onListening);\r\n\r\n/**\r\n * Normalize a port into a number, string, or false.\r\n */\r\n\r\nfunction normalizePort(val) {\r\n  var port = parseInt(val, 10);\r\n\r\n  if (isNaN(port)) {\r\n    // named pipe\r\n    return val;\r\n  }\r\n\r\n  if (port >= 0) {\r\n    // port number\r\n    return port;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Event listener for HTTP server \"error\" event.\r\n */\r\n\r\nfunction onError(error) {\r\n  if (error.syscall !== 'listen') {\r\n    throw error;\r\n  }\r\n\r\n  var bind = typeof port === 'string'\r\n    ? 'Pipe ' + port\r\n    : 'Port ' + port;\r\n\r\n  // handle specific listen errors with friendly messages\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error(bind + ' requires elevated privileges');\r\n      process.exit(1);\r\n      break;\r\n    case 'EADDRINUSE':\r\n      console.error(bind + ' is already in use');\r\n      process.exit(1);\r\n      break;\r\n    default:\r\n      throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Event listener for HTTP server \"listening\" event.\r\n */\r\n\r\nfunction onListening() {\r\n  var addr = server.address();\r\n  console.log('服务启动： ' + port);\r\n  var bind = typeof addr === 'string'\r\n    ? 'pipe ' + addr\r\n    : 'port ' + addr.port;\r\n  debug('Listening on ' + bind);\r\n}\r\n"]}