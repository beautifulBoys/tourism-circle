{"version":3,"sources":["../../src/controller/ranking.js"],"names":["list","sort","b","a","length","arr","xunHuanNun","i","FindUser","id","user","push","username","num","FollowsFunc","postUserFunc","postNum","resolve","reject","findOne","err","docs","rankingFunc","req","res","find","postList","followsList","followingList","friendList","send","code","message","data"],"mappings":"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","file":"ranking.js","sourcesContent":["\r\nimport User from '../model/user.js';\r\nimport Follow from '../model/follow.js';\r\nimport Following from '../model/following.js';\r\nimport Friend from '../model/friend.js';\r\n\r\n\r\nfunction postUserFunc (list) {\r\n  list = list.sort((b, a) => {\r\n    return a.postNum - b.postNum;\r\n  });\r\n  let arr = [];\r\n  let xunHuanNun = (list.length > 6 ? 6 : list.length);\r\n  for (let i = 0; i < xunHuanNun; i++) {\r\n    arr.push({\r\n      id: list[i].id,\r\n      username: list[i].username,\r\n      num: list[i].postNum\r\n    });\r\n  }\r\n  return arr;\r\n}\r\nfunction FindUser (id) {\r\n  return new Promise(function (resolve, reject) {\r\n    User.findOne({id}, (err, docs) => {\r\n      if (err) reject(err);\r\n      else resolve(docs);\r\n    });\r\n  });\r\n}\r\nasync function FollowsFunc (list) {\r\n  list = list.sort((b, a) => {\r\n    return a.list.length - b.list.length;\r\n  });\r\n  let arr = [];\r\n  let xunHuanNun = (list.length > 6 ? 6 : list.length);\r\n  for (let i = 0; i < xunHuanNun; i++) {\r\n    let user = await FindUser(list[i].id - 0);\r\n    arr.push({\r\n      id: user.id,\r\n      username: user.username,\r\n      num: list[i].list.length\r\n    });\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport const rankingFunc = async (req, res) => {\r\n  try {\r\n    // 分享排行榜\r\n    let postList = await User.find({});\r\n    postList = postUserFunc(postList);\r\n    // 粉丝排行榜\r\n    let followsList = await Follow.find({});\r\n    followsList = await FollowsFunc(followsList);\r\n    // 关注排行榜\r\n    let followingList = await Following.find({});\r\n    followingList = await FollowsFunc(followingList);\r\n    // 好友排行榜\r\n    let friendList = await Friend.find({});\r\n    friendList = await FollowsFunc(friendList);\r\n\r\n    res.send({code: 200, message: '获取排行榜信息成功', data: {\r\n      friendList,\r\n      followingList, \r\n      followsList, \r\n      postList\r\n    }});\r\n  } catch (err) {\r\n    res.send({code: 200, message: '获取排行榜信息失败', data: {}});\r\n  }\r\n  \r\n};"]}