{"version":3,"sources":["../../src/controller/user.js"],"names":["passportFunc","password","formatDate","Date","loginFunc","req","res","body","username","findOne","result","passport","update","_id","multi","send","code","message","data","userId","id","type","obj","value","create","err","docs","console","log","getUserInfoFunc","email","address","desc","avatar","sex","userInfoUpdateFunc","headers","userid","getAllUserFunc","pageConfig","num","page","start","end","find","total","length","slice","arr","i","status","item","join","postNum","push","list"],"mappings":"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","file":"user.js","sourcesContent":["\r\nimport User from '../model/user.js';\r\nimport Following from '../model/following.js';\r\nimport Follow from '../model/follow.js';\r\nimport Friend from '../model/friend.js';\r\nimport Star from '../model/star.js';\r\nimport Comment from '../model/comment.js';\r\nimport Id from '../model/id.js';\r\nimport md5 from 'blueimp-md5';\r\nimport formatDate from '../lib/formDate.js';\r\n\r\nfunction passportFunc (password) {\r\n  return md5('circle' + formatDate.formatDate(new Date()) + password);\r\n}\r\n\r\nexport const loginFunc = async (req, res) => {\r\n  if (req.body.username && req.body.password) {\r\n    try {\r\n      let result = await User.findOne({username: req.body.username});\r\n      let passport = passportFunc(req.body.password);\r\n      let username = req.body.username;\r\n      if (result) {\r\n        if (result.password === req.body.password) {\r\n          await User.update({_id: result._id}, {passport: passport}, {multi: false}, () => {});\r\n          res.send({code: 200, message: '你好：' + username + '，欢迎回来', data: {passport, userId: result.id, username}});\r\n        } else {\r\n          res.send({code: 300, message: '用户名或密码输入错误', data: {}});\r\n        }\r\n      } else {\r\n        let obj = await Id.findOne({type: 'userId'});\r\n        if (obj) await Id.update({_id: obj._id}, {value: obj.value + 1}, {multi: false}, () => {});\r\n        else await Id.create({type: 'userId'});\r\n        obj = await Id.findOne({type: 'userId'});\r\n        let userId = obj.value + 1;\r\n        // 创建 user 表\r\n        await User.create({\r\n          id: userId,\r\n          username: req.body.username,\r\n          password: req.body.password,\r\n          passport: passport\r\n        }, (err, docs) => {\r\n          if (err) console.log('create user 出错了', err);\r\n        });\r\n  \r\n        // 同步创建 following 表\r\n        await Following.create({\r\n          id: userId,\r\n          userId: userId\r\n        }, (err, docs) => {\r\n          if (err) console.log('create following 出错了', err);\r\n        });\r\n        // 同步创建 follow 表\r\n        await Follow.create({\r\n          id: userId,\r\n          userId: userId\r\n        }, (err, docs) => {\r\n          if (err) console.log('create follow 出错了', err);\r\n        });\r\n        // 同步创建 friend 表\r\n        await Friend.create({\r\n          id: userId,\r\n          userId: userId\r\n        }, (err, docs) => {\r\n          if (err) console.log('create friend 出错了', err);\r\n        });\r\n        // 同步创建 star 表\r\n        await Star.create({\r\n          id: userId,\r\n          userId: userId\r\n        }, (err, docs) => {\r\n          if (err) console.log('create star 出错了', err);\r\n        });\r\n        // 同步创建 comment 表\r\n        await Comment.create({\r\n          id: userId,\r\n          userId: userId\r\n        }, (err, docs) => {\r\n          if (err) console.log('create comment 出错了', err);\r\n        });\r\n  \r\n  \r\n        res.send({code: 200, message: '你好：' + username + '，已自动为您注册账号', data: {\r\n          passport, \r\n          userId: obj.value + 1, \r\n          username\r\n        }});\r\n      }\r\n    } catch (err) {\r\n      res.send({code: 300, message: '登录故障，请联系管理员', data: {}});\r\n    }\r\n    \r\n  } else {\r\n    res.send({code: 300, message: '用户名和密码请输入完整', data: {}});\r\n  }\r\n};\r\n\r\nexport const getUserInfoFunc = async (req, res) => {\r\n  try {\r\n    let data = await User.findOne({id: req.body.userId});\r\n    let obj = {};\r\n    if (data) {\r\n      obj.username = data.username;\r\n      obj.userId = data.id;\r\n      obj.email = data.email;\r\n      obj.address = data.address;\r\n      obj.desc = data.desc;\r\n      obj.avatar = data.avatar;\r\n      obj.sex = (data.sex === 1 ? '女孩' : '男孩');\r\n    }\r\n    res.send({code: 200, message: '获取用户信息成功', data: obj});\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.send({code: 200, message: '获取用户信息失败', data: err});\r\n  }\r\n  \r\n};\r\nexport const userInfoUpdateFunc = async (req, res) => {\r\n  try {\r\n    await User.update({id: req.headers.userid}, {...req.body}, {multi: false}, () => {});\r\n    res.send({code: 200, message: '修改用户信息成功', data: {}});\r\n  } catch (err) {\r\n    res.send({code: 300, message: '修改用户信息失败', data: err});\r\n  }\r\n};\r\n\r\nexport const getAllUserFunc = async (req, res) => {\r\n  let pageConfig = {\r\n    num: req.body.num - 0, // 每页数量\r\n    page: req.body.page - 0 // 当前页数\r\n  };\r\n  let start = pageConfig.page * pageConfig.num;\r\n  let end = start + pageConfig.num;\r\n  try {\r\n    let result = await User.find({});\r\n    let total = result.length;\r\n    result = result.slice(start, end);\r\n    let arr = [];\r\n    for (let i = 0; i < result.length; i++) {\r\n      if (!result[i].status) continue;\r\n      let item = {\r\n        address: result[i].address.length > 0 ? result[i].address.join('-') : '',\r\n        email: result[i].email,\r\n        id: result[i].id,\r\n        username: result[i].username,\r\n        desc: result[i].desc,\r\n        postNum: result[i].postNum,\r\n        avatar: result[i].avatar,\r\n        sex: result[i].sex\r\n      };\r\n      arr.push(item);\r\n    }\r\n    res.send({code: 200, message: '获取用户列表成功', data: {list: arr, total}});\r\n  } catch (err) {\r\n    res.send({code: 300, message: '获取用户列表失败', data: err});\r\n  }\r\n};\r\n\r\n"]}