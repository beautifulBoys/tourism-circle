{"version":3,"sources":["../../src/controller/common.js"],"names":["myStarFunc","req","res","userId","headers","userid","pageConfig","num","body","page","start","end","arr","findOne","id","list","send","code","message","data","slice","i","length","post","isStared","starList","indexOf","j","user","push","commentList","h","comment","url","avatar","name","username","obj","postTime","tagList","rate","urls","content","time","city","spot","title","myCommentsFunc"],"mappings":"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","file":"common.js","sourcesContent":["\r\nimport User from '../model/user.js';\r\nimport Star from '../model/star.js';\r\nimport Comment from '../model/comment.js';\r\nimport Post from '../model/post.js';\r\n\r\nexport const myStarFunc = async (req, res) => {\r\n  let userId = req.headers.userid - 0;\r\n  let pageConfig = {\r\n    num: req.body.num - 0, // 每页数量\r\n    page: req.body.page - 0 // 当前页数\r\n  };\r\n  let start = pageConfig.page * pageConfig.num;\r\n  let end = start + pageConfig.num;\r\n  let arr = [];\r\n\r\n\r\n  try {\r\n\r\n    let {list} = await Star.findOne({id: userId});\r\n    if (!list) {\r\n      res.send({code: 300, message: '你还没有喜欢过别人的分享', data: {}});\r\n      return;\r\n    }\r\n    list = list.slice(start, end);\r\n    for (let i = 0; i < list.length; i++) {\r\n      let post = await Post.findOne({id: list[i] - 0});\r\n      let isStared = (post.starList.indexOf(userId) === -1 ? false : true);\r\n      let starList = [];\r\n      for (let j = 0; j < post.starList.length; j++) {\r\n        let user = await User.findOne({id: post.starList[j] - 0});\r\n        starList.push(user);\r\n      }\r\n      let commentList = [];\r\n      for (let h = 0; h < post.commentList.length; h++) {\r\n        let user = await User.findOne({id: post.commentList[h].userId - 0});\r\n        \r\n        commentList.push({\r\n          comment: post.commentList[h].comment,\r\n          user: {\r\n            url: user.avatar,\r\n            name: user.username\r\n          }\r\n        });\r\n      }\r\n      let {avatar} = await User.findOne({id: post.userId});\r\n      let obj = {\r\n        id: post.id,\r\n        userId: post.userId - 0,\r\n        postTime: post.postTime,\r\n        commentList,\r\n        starList,\r\n        tagList: post.tagList,\r\n        rate: post.rate,\r\n        urls: post.urls,\r\n        content: post.content,\r\n        time: post.time,\r\n        city: post.city,\r\n        spot: post.spot,\r\n        title: post.title,\r\n        avatar,\r\n        isStared\r\n      };\r\n      arr.push(obj);\r\n    }\r\n    res.send({code: 200, message: '获取我的喜欢成功', data: {list: arr}});\r\n  } catch (err) {\r\n    res.send({code: 300, message: '获取我的喜欢失败，请联系管理员', data: err});\r\n  }\r\n  \r\n};\r\n\r\nexport const myCommentsFunc = async (req, res) => {\r\n  let userId = req.headers.userid - 0;\r\n  let pageConfig = {\r\n    num: req.body.num - 0, // 每页数量\r\n    page: req.body.page - 0 // 当前页数\r\n  };\r\n  let start = pageConfig.page * pageConfig.num;\r\n  let end = start + pageConfig.num;\r\n  let arr = [];\r\n  try {\r\n    let {list} = await Comment.findOne({id: userId});\r\n    if (!list) {\r\n      res.send({code: 300, message: '你还没有评论过别人的分享', data: {}});\r\n      return;\r\n    }\r\n    list = list.slice(start, end);\r\n    for (let i = 0; i < list.length; i++) {\r\n      let post = await Post.findOne({id: list[i] - 0});\r\n      let isStared = (post.starList.indexOf(userId) === -1 ? false : true);\r\n      let starList = [];\r\n      for (let j = 0; j < post.starList.length; j++) {\r\n        let user = await User.findOne({id: post.starList[j] - 0});\r\n        starList.push(user);\r\n      }\r\n      let commentList = [];\r\n      for (let h = 0; h < post.commentList.length; h++) {\r\n        let user = await User.findOne({id: post.commentList[h].userId - 0});\r\n        \r\n        commentList.push({\r\n          comment: post.commentList[h].comment,\r\n          user: {\r\n            url: user.avatar,\r\n            name: user.username\r\n          }\r\n        });\r\n      }\r\n      let {avatar} = await User.findOne({id: post.userId});\r\n      let obj = {\r\n        id: post.id,\r\n        userId: post.userId - 0,\r\n        postTime: post.postTime,\r\n        commentList,\r\n        starList,\r\n        tagList: post.tagList,\r\n        rate: post.rate,\r\n        urls: post.urls,\r\n        content: post.content,\r\n        time: post.time,\r\n        city: post.city,\r\n        spot: post.spot,\r\n        title: post.title,\r\n        avatar,\r\n        isStared\r\n      };\r\n      arr.push(obj);\r\n    }\r\n    res.send({code: 200, message: '获取我评论的数据成功', data: {list: arr}});\r\n  } catch (err) {\r\n    res.send({code: 300, message: '获取我评论的数据失败，请联系管理员', data: err});\r\n  }\r\n  \r\n};\r\n\r\n"]}