{"version":3,"sources":["../../src/controller/friend.js"],"names":["addFriendFunc","req","res","fromId","headers","userid","toId","body","to","remark","send","code","message","data","findOne","userId","friend","list","indexOf","status","type","obj","create","id","value","console","log","deleteFriendFunc","fromObj","friendList","concat","n","splice","update","multi","err","toObj","fromobj","i","length","item","address","join","email","username","desc","postNum","sex","push","friendHandleFunc","meId","messageId","friendFromObj","newFrindList_from","friendToObj","newFrindList_to","find","result","myFriendFunc","user","avatar"],"mappings":"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","file":"friend.js","sourcesContent":["\r\nimport User from '../model/user.js'\r\nimport Message from '../model/message.js'\r\nimport Friend from '../model/friend.js'\r\nimport Id from '../model/id.js'\r\n\r\nexport const addFriendFunc = async (req, res) => {\r\n  let fromId = req.headers.userid - 0\r\n  let toId = req.body.to - 0\r\n  let remark = req.body.remark\r\n  if (fromId === toId) {\r\n    res.send({code: 300, message: '不能添加自己为好友', data: {}})\r\n    return\r\n  }\r\n  // 判断是否已经是好友\r\n  let friend = await Friend.findOne({userId: fromId})\r\n  if (friend.list.indexOf(toId) !== -1) {\r\n    res.send({code: 300, message: '你们已经是好友', data: {}})\r\n    return\r\n  }\r\n  // 判断是否已经发送过请求了\r\n  friend = await Message.findOne({fromId: fromId, toId: toId, status: true, type: 'add-friend'})\r\n  if (friend) {\r\n    res.send({code: 300, message: '您已经对该用户发送过好友请求，请等待回复', data: {}})\r\n    return\r\n  }\r\n\r\n  try {\r\n    let obj = await Id.findOne({type: 'messageId'})\r\n    await Message.create({\r\n      id: obj.value + 1,\r\n      type: 'add-friend',\r\n      fromId: fromId,\r\n      toId: toId,\r\n      remark: remark\r\n    })\r\n    res.send({code: 200, message: '添加好友请求发送成功', data: {}})\r\n  } catch (err) {\r\n    console.log(err)\r\n    res.send({code: 300, message: '添加好友请求发送失败', data: err})\r\n  }\r\n}\r\n\r\nexport const deleteFriendFunc = async (req, res) => {\r\n  let fromId = req.headers.userid - 0\r\n  let toId = req.body.id - 0\r\n  console.log(fromId, toId)\r\n  try {\r\n    let fromObj = await Friend.findOne({userId: fromId})\r\n    let friendList = fromObj.list.concat([])\r\n    let n = friendList.indexOf(toId)\r\n    if (n !== -1) friendList.splice(n, 1)\r\n    Friend.update({userId: fromId}, {list: friendList}, {multi: false}, (err) => {})\r\n\r\n    let toObj = await Friend.findOne({userId: toId})\r\n    friendList = toObj.list.concat([])\r\n    n = friendList.indexOf(fromId)\r\n    if (n !== -1) friendList.splice(n, 1)\r\n    Friend.update({userId: toId}, {list: friendList}, {multi: false}, (err) => {})\r\n\r\n    let list = []\r\n    let fromobj = await Friend.findOne({userId: fromId})\r\n\r\n    for (let i = 0; i < fromobj.list.length; i++) {\r\n      let friend = await User.findOne({id: fromobj.list[i] - 0})\r\n\r\n      let item = {\r\n        address: friend.address.length > 0 ? friend.address.join('-') : '未设置',\r\n        email: friend.email || '未设置',\r\n        id: friend.id,\r\n        username: friend.username,\r\n        desc: friend.desc || '未设置',\r\n        postNum: friend.postNum\r\n      }\r\n      if (friend.sex === 1) item.sex = '女孩'\r\n      else if (friend.sex === 2) item.sex = '男孩'\r\n      else item.sex = '未设置'\r\n      list.push(item)\r\n    }\r\n    res.send({code: 200, message: '解除好友关系成功', data: {list}})\r\n  } catch (err) {\r\n    res.send({code: 300, message: '解除好友关系失败', data: err})\r\n  }\r\n}\r\n\r\nexport const friendHandleFunc = async (req, res) => { // 处理好友请求\r\n  let meId = req.headers.userid;\r\n  let messageId = req.body.messageId - 0;\r\n  let fromId = req.body.fromId - 0;\r\n  let toId = req.body.toId - 0;\r\n  let type\r\n  await Message.update({id: messageId}, {status: false}, {multi: false}, (err) => {})\r\n\r\n  if (req.body.type === 'agree') {\r\n    try {\r\n      let friendFromObj = await Friend.findOne({userId: fromId})\r\n      let newFrindList_from = friendFromObj.list.concat([])\r\n      newFrindList_from.push(toId)\r\n      await Friend.update({userId: fromId}, {list: newFrindList_from}, {multi: false}, (err) => {\r\n        if (err) console.log(1, err)\r\n      })\r\n\r\n      let friendToObj = await Friend.findOne({userId: toId})\r\n      let newFrindList_to = friendToObj.list.concat([])\r\n      newFrindList_to.push(fromId)\r\n      await Friend.update({userId: toId}, {list: newFrindList_to}, {multi: false}, (err) => {\r\n        if (err) console.log(2, err)\r\n      })\r\n\r\n      let result = await Message.find({toId: meId})\r\n      let list = []\r\n      for (let i = 0; i < result.length; i++) {\r\n        if (result[i].status) list.push(result[i])\r\n      }\r\n      res.send({code: 200, message: '已添加好友', data: list})\r\n    } catch (err) {\r\n      console.log(err)\r\n      res.send({code: 300, message: '添加好友失败', data: err})\r\n    }\r\n  } else {\r\n    res.send({code: 200, message: '已拒绝', data: {}})\r\n  }\r\n}\r\n\r\nexport const myFriendFunc = async (req, res) => {\r\n  let userId = req.headers.userid\r\n  let list = []\r\n  try {\r\n    let user = await Friend.findOne({userId: userId})\r\n    for (let i = 0; i < user.list.length; i++) {\r\n      let friend = await User.findOne({id: user.list[i] - 0})\r\n\r\n      let item = {\r\n        address: friend.address.length > 0 ? friend.address.join('-') : '',\r\n        email: friend.email,\r\n        id: friend.id,\r\n        username: friend.username,\r\n        desc: friend.desc,\r\n        postNum: friend.postNum,\r\n        avatar: friend.avatar,\r\n        sex: friend.sex\r\n      }\r\n      list.push(item)\r\n    }\r\n\r\n    res.send({code: 200, message: '获取用户列表成功', data: {list: list}})\r\n  } catch (err) {\r\n    res.send({code: 300, message: '获取用户列表失败', data: err})\r\n  }\r\n}\r\n"]}