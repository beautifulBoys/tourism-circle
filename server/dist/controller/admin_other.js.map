{"version":3,"sources":["../../src/controller/admin_other.js"],"names":["getCityDataFunc","req","res","send","code","message","data","authenticationFunc","next","ignoreList","indexOf","path","passport","headers","userId","userid","findOne","id","result","mapFunc","find","count","length","obj","i","address","arr","k","push","name","value","rate","downloadFunc","download","join","__dirname","err","console","log"],"mappings":"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","file":"admin_other.js","sourcesContent":["import path from 'path';\r\nimport {china} from '../data/city.js';\r\nimport User from '../model/user.js';\r\n\r\nexport const getCityDataFunc = async (req, res) => {\r\n  res.send({code: 200, message: '获取城市数据成功', data: china});\r\n};\r\n\r\n// 统一身份验证\r\nexport const authenticationFunc = async (req, res, next) => {\r\n  const ignoreList = [\r\n    '/login',\r\n    '/map',\r\n    '/download'\r\n  ];\r\n  if (ignoreList.indexOf(req.path) !== -1) {\r\n    next();\r\n    return;\r\n  }\r\n  let passport = req.headers.passport;\r\n  let userId = req.headers.userid - 0;\r\n  try {\r\n    let result = await User.findOne({id: userId});\r\n    if (result && result.passport && passport === result.passport) {\r\n      next();\r\n    } else {\r\n      res.send({code: 400, message: '身份验证失败', data: {}});\r\n      return;\r\n    }\r\n  } catch (err) {\r\n    res.send({code: 400, message: '此账号验证异常，请重新登录', data: {}});\r\n  }\r\n};\r\n\r\nexport const mapFunc = async (req, res, next) => {\r\n\r\n  try {\r\n    let result = await User.find({});\r\n    let count = result.length;\r\n    let obj = {};\r\n    for (let i = 0; i < count; i++) {\r\n      if (result[i].address.length > 0) {\r\n        if (obj[result[i].address[0]]) obj[result[i].address[0]]++;\r\n        else obj[result[i].address[0]] = 1;\r\n      } else {\r\n        if (obj['未知']) obj['未知']++;\r\n        else obj['未知'] = 1;\r\n      }\r\n    }\r\n    let arr = [];\r\n    for (let k in obj) {\r\n      arr.push({\r\n        name: k,\r\n        value: obj[k],\r\n        rate: obj[k] / count\r\n      });\r\n    }\r\n    res.send({code: 200, message: '数据查询成功', data: arr});\r\n  } catch (err) {\r\n    res.send({code: 400, message: '数据查询失败', data: {}});\r\n  }\r\n};\r\n\r\nexport const downloadFunc = async (req, res, next) => {\r\n  res.download(path.join(__dirname, '../../resource/Desert.jpg'), 'Desert.jpg', (err) => {\r\n    if (err) console.log(err);\r\n    else console.log('没有错误');\r\n  });\r\n};"]}