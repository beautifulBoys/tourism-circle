{"version":3,"sources":["../../src/controller/client_other.js"],"names":["userMainInfoFunc","req","res","userId","headers","userid","toId","body","id","findOne","user","friend","find","postList","arr","i","length","push","title","postTime","formatCSTDate","avatar","urls","isFriend","list","indexOf","following","isFollowing","result","userInfo","username","desc","send","code","message","data","mineFunc","follow","friendNum","followNum","followingNum","postInfoFunc","postId","post","starList","starUser","commentList","commentUser","comment","isStared","content","authenticationFunc","next","path","passport"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA;AAAA,sFAAmB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,kBAD0B,GACjBF,IAAIG,OAAJ,CAAYC,MAAZ,GAAqB,CADJ;AAE1BC,gBAF0B,GAEnBL,IAAIM,IAAJ,CAASC,EAAT,GAAc,CAFK;AAAA;AAAA;AAAA,mBAIX,eAAKC,OAAL,CAAa,EAACD,IAAIF,IAAL,EAAb,CAJW;;AAAA;AAIxBI,gBAJwB;AAAA;AAAA,mBAKT,iBAAOD,OAAP,CAAe,EAACD,IAAIL,MAAL,EAAf,CALS;;AAAA;AAKxBQ,kBALwB;AAAA;AAAA,mBAMP,eAAKC,IAAL,CAAU,EAACT,QAAQG,IAAT,EAAV,CANO;;AAAA;AAMxBO,oBANwB;AAOxBC,eAPwB,GAOlB,EAPkB;;AAQ5B,iBAASC,CAAT,GAAa,CAAb,EAAgBA,IAAIF,SAASG,MAA7B,EAAqCD,GAArC,EAA0C;AACxCD,kBAAIG,IAAJ,CAAS;AACPT,oBAAIK,SAASE,CAAT,EAAYP,EADT;AAEPU,uBAAOL,SAASE,CAAT,EAAYG,KAFZ;AAGPC,0BAAU,mBAAKC,aAAL,CAAmBP,SAASE,CAAT,EAAYI,QAA/B,CAHH;AAIPE,wBAAQX,KAAKW,MAJN;AAKPC,sBAAMT,SAASE,CAAT,EAAYO;AALX,eAAT;AAOD;AACGC,oBAjBwB,GAiBbZ,OAAOa,IAAP,CAAYC,OAAZ,CAAoBnB,IAApB,CAjBa;AAAA;AAAA,mBAkBN,oBAAUG,OAAV,CAAkB,EAACD,IAAIL,MAAL,EAAlB,CAlBM;;AAAA;AAkBxBuB,qBAlBwB;AAmBxBC,uBAnBwB,GAmBVD,UAAUF,IAAV,CAAeC,OAAf,CAAuBnB,IAAvB,CAnBU;AAsBxBsB,kBAtBwB,GAsBf;AACXC,wBAAU;AACRC,0BAAUpB,KAAKoB,QADP;AAER3B,wBAAQO,KAAKP,MAFL;AAGRkB,wBAAQX,KAAKW,MAHL;AAIRU,sBAAMrB,KAAKqB;AAJH,eADC;AAOXR,wBAAWA,aAAa,CAAC,CAPd;AAQXI,2BAAcA,gBAAgB,CAAC,CARpB;AASXd,wBAAUC;AATC,aAtBe;;;AAkC5BZ,gBAAI8B,IAAJ,CAAS,EAACC,MAAM,GAAP,EAAYC,SAAS,YAArB,EAAmCC,MAAMP,MAAzC,EAAT;AAlC4B;AAAA;;AAAA;AAAA;AAAA;;AAoC5B1B,gBAAI8B,IAAJ,CAAS,EAACC,MAAM,GAAP,EAAYC,SAAS,YAArB,EAAmCC,iBAAnC,EAAT;;AApC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAwCA,IAAMC;AAAA,uFAAW,kBAAOnC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,kBADkB,GACTF,IAAIG,OAAJ,CAAYC,MAAZ,GAAqB,CADZ;AAAA;AAAA;AAAA,mBAGH,eAAKI,OAAL,CAAa,EAACD,IAAIL,MAAL,EAAb,CAHG;;AAAA;AAGhBO,gBAHgB;AAAA;AAAA,mBAID,iBAAOD,OAAP,CAAe,EAACD,IAAIL,MAAL,EAAf,CAJC;;AAAA;AAIhBQ,kBAJgB;AAAA;AAAA,mBAKD,iBAAOF,OAAP,CAAe,EAACD,IAAIL,MAAL,EAAf,CALC;;AAAA;AAKhBkC,kBALgB;AAAA;AAAA,mBAME,oBAAU5B,OAAV,CAAkB,EAACD,IAAIL,MAAL,EAAlB,CANF;;AAAA;AAMhBuB,qBANgB;AAQhBS,gBARgB,GAQT;AACTL,wBAAUpB,KAAKoB,QADN;AAET3B,sBAAQO,KAAKP,MAFJ;AAGTkB,sBAAQX,KAAKW,MAHJ;AAITU,oBAAMrB,KAAKqB,IAJF;AAKTO,yBAAW3B,OAAOa,IAAP,CAAYR,MALd;AAMTuB,yBAAWF,OAAOb,IAAP,CAAYR,MANd;AAOTwB,4BAAcd,UAAUF,IAAV,CAAeR;AAPpB,aARS;;;AAkBpBd,gBAAI8B,IAAJ,CAAS,EAACC,MAAM,GAAP,EAAYC,SAAS,YAArB,EAAmCC,UAAnC,EAAT;AAlBoB;AAAA;;AAAA;AAAA;AAAA;;AAoBpBjC,gBAAI8B,IAAJ,CAAS,EAACC,MAAM,GAAP,EAAYC,SAAS,YAArB,EAAmCC,kBAAnC,EAAT;;AApBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAwBA,IAAMM;AAAA,uFAAe,kBAAOxC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtBwC,kBADsB,GACbzC,IAAIM,IAAJ,CAASC,EAAT,GAAc,CADD;AAEtBL,kBAFsB,GAEbF,IAAIG,OAAJ,CAAYC,MAAZ,GAAqB,CAFR;AAAA;AAAA;AAAA,mBAIP,eAAKI,OAAL,CAAa,EAACD,IAAIkC,MAAL,EAAb,CAJO;;AAAA;AAIpBC,gBAJoB;AAAA;AAAA,mBAKP,eAAKlC,OAAL,CAAa,EAACD,IAAImC,KAAKxC,MAAV,EAAb,CALO;;AAAA;AAKpBO,gBALoB;AAMpBkC,oBANoB,GAMT,EANS;AAOf7B,aAPe,GAOX,CAPW;;AAAA;AAAA,kBAORA,IAAI4B,KAAKC,QAAL,CAAc5B,MAPV;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQD,eAAKP,OAAL,CAAa,EAACD,IAAImC,KAAKC,QAAL,CAAc7B,CAAd,IAAmB,CAAxB,EAAb,CARC;;AAAA;AAQlB8B,oBARkB;;AAStBD,qBAAS3B,IAAT,CAAc;AACZI,sBAAQwB,SAASxB;AADL,aAAd;;AATsB;AAOkBN,eAPlB;AAAA;AAAA;;AAAA;AAcpB+B,uBAdoB,GAcN,EAdM;AAef/B,cAfe,GAeX,CAfW;;AAAA;AAAA,kBAeRA,KAAI4B,KAAKG,WAAL,CAAiB9B,MAfb;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgBE,eAAKP,OAAL,CAAa,EAACD,IAAImC,KAAKG,WAAL,CAAiB/B,EAAjB,EAAoBZ,MAApB,GAA6B,CAAlC,EAAb,CAhBF;;AAAA;AAgBlB4C,uBAhBkB;;AAiBtBD,wBAAY7B,IAAZ,CAAiB;AACfY,wBAAU;AACRR,wBAAQ0B,YAAY1B,MADZ;AAERS,0BAAUiB,YAAYjB,QAFd;AAGRtB,oBAAIuC,YAAYvC;AAHR,eADK;AAMfwC,uBAASL,KAAKG,WAAL,CAAiB/B,EAAjB,EAAoBiC;AANd,aAAjB;;AAjBsB;AAeqBjC,gBAfrB;AAAA;AAAA;;AAAA;AA0BpBkC,oBA1BoB,GA0BRN,KAAKC,QAAL,CAAcnB,OAAd,CAAsBtB,MAAtB,MAAkC,CAAC,CA1B3B;AA2BpBgC,gBA3BoB,GA2Bb;AACTN,wBAAU;AACRR,wBAAQX,KAAKW,MADL;AAERS,0BAAUpB,KAAKoB,QAFP;AAGRtB,oBAAIE,KAAKF;AAHD,eADD;AAMTU,qBAAOyB,KAAKzB,KANH;AAOTC,wBAAU,mBAAKC,aAAL,CAAmBuB,KAAKxB,QAAxB,CAPD;AAQT+B,uBAASP,KAAKO,OARL;AASTN,wBAAUA,QATD;AAUTE,2BAAaA,WAVJ;AAWTG,gCAXS;AAYT3B,oBAAMqB,KAAKrB;AAZF,aA3Ba;;;AA0CxBpB,gBAAI8B,IAAJ,CAAS,EAACC,MAAM,GAAP,EAAYC,SAAS,YAArB,EAAmCC,UAAnC,EAAT;AA1CwB;AAAA;;AAAA;AAAA;AAAA;;AA4CxBjC,gBAAI8B,IAAJ,CAAS,EAACC,MAAM,GAAP,EAAYC,SAAS,YAArB,EAAmCC,kBAAnC,EAAT;;AA5CwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAgDP;AACO,IAAMgB;AAAA,uFAAqB,kBAAOlD,GAAP,EAAYC,GAAZ,EAAiBkD,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC5BnD,IAAIoD,IAAJ,KAAa,QADe;AAAA;AAAA;AAAA;;AAE9BD;AAF8B;;AAAA;AAK5BE,oBAL4B,GAKjBrD,IAAIG,OAAJ,CAAYkD,QALK;AAM5BnD,kBAN4B,GAMnBF,IAAIG,OAAJ,CAAYC,MAAZ,GAAqB,CANF;AAAA;AAAA;AAAA,mBAQX,eAAKI,OAAL,CAAa,EAACD,IAAIL,MAAL,EAAb,CARW;;AAAA;AAQ1ByB,kBAR0B;;AAAA,kBAS1BA,UAAUA,OAAO0B,QAAjB,IAA6BA,aAAa1B,OAAO0B,QATvB;AAAA;AAAA;AAAA;;AAU5BF;AAV4B;AAAA;;AAAA;AAY5BlD,gBAAI8B,IAAJ,CAAS,EAACC,MAAM,GAAP,EAAYC,SAAS,QAArB,EAA+BC,MAAM,EAArC,EAAT;AAZ4B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAgB9BjC,gBAAI8B,IAAJ,CAAS,EAACC,MAAM,GAAP,EAAYC,SAAS,eAArB,EAAsCC,MAAM,EAA5C,EAAT;;AAhB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"client_other.js","sourcesContent":["import User from '../model/user.js'\r\nimport Post from '../model/post.js'\r\nimport Friend from '../model/friend.js'\r\nimport Following from '../model/following.js'\r\nimport Follow from '../model/follow.js'\r\nimport util from '../lib/formDate.js'\r\n\r\nexport const userMainInfoFunc = async (req, res) => {\r\n  let userId = req.headers.userid - 0\r\n  let toId = req.body.id - 0\r\n  try {\r\n    let user = await User.findOne({id: toId})\r\n    let friend = await Friend.findOne({id: userId})\r\n    let postList = await Post.find({userId: toId})\r\n    let arr = []\r\n    for (let i = 0; i < postList.length; i++) {\r\n      arr.push({\r\n        id: postList[i].id,\r\n        title: postList[i].title,\r\n        postTime: util.formatCSTDate(postList[i].postTime),\r\n        avatar: user.avatar,\r\n        urls: postList[i].urls\r\n      })\r\n    }\r\n    let isFriend = friend.list.indexOf(toId)\r\n    let following = await Following.findOne({id: userId})\r\n    let isFollowing = following.list.indexOf(toId)\r\n\r\n\r\n    let result = {\r\n      userInfo: {\r\n        username: user.username,\r\n        userId: user.userId,\r\n        avatar: user.avatar,\r\n        desc: user.desc\r\n      },\r\n      isFriend: (isFriend !== -1),\r\n      isFollowing: (isFollowing !== -1),\r\n      postList: arr\r\n    }\r\n\r\n    res.send({code: 200, message: '获取用户主页数据成功', data: result})\r\n  } catch (err) {\r\n    res.send({code: 300, message: '获取用户主页数据失败', data: err})\r\n  }\r\n}\r\n\r\nexport const mineFunc = async (req, res) => {\r\n  let userId = req.headers.userid - 0\r\n  try {\r\n    let user = await User.findOne({id: userId})\r\n    let friend = await Friend.findOne({id: userId})\r\n    let follow = await Follow.findOne({id: userId})\r\n    let following = await Following.findOne({id: userId})\r\n\r\n    let data = {\r\n      username: user.username,\r\n      userId: user.userId,\r\n      avatar: user.avatar,\r\n      desc: user.desc,\r\n      friendNum: friend.list.length,\r\n      followNum: follow.list.length,\r\n      followingNum: following.list.length\r\n    }\r\n\r\n    res.send({code: 200, message: '获取个人主页数据成功', data})\r\n  } catch (err) {\r\n    res.send({code: 300, message: '获取个人主页数据失败', data: err})\r\n  }\r\n}\r\n\r\nexport const postInfoFunc = async (req, res) => {\r\n  let postId = req.body.id - 0\r\n  let userId = req.headers.userid - 0\r\n  try {\r\n    let post = await Post.findOne({id: postId})\r\n    let user = await User.findOne({id: post.userId})\r\n    let starList = []\r\n    for (let i = 0; i < post.starList.length; i++) {\r\n      let starUser = await User.findOne({id: post.starList[i] - 0})\r\n      starList.push({\r\n        avatar: starUser.avatar\r\n      })\r\n    }\r\n\r\n    let commentList = []\r\n    for (let i = 0; i < post.commentList.length; i++) {\r\n      let commentUser = await User.findOne({id: post.commentList[i].userId - 0})\r\n      commentList.push({\r\n        userInfo: {\r\n          avatar: commentUser.avatar,\r\n          username: commentUser.username,\r\n          id: commentUser.id\r\n        },\r\n        comment: post.commentList[i].comment\r\n      })\r\n    }\r\n    let isStared = (post.starList.indexOf(userId) !== -1)\r\n    let data = {\r\n      userInfo: {\r\n        avatar: user.avatar,\r\n        username: user.username,\r\n        id: user.id\r\n      },\r\n      title: post.title,\r\n      postTime: util.formatCSTDate(post.postTime),\r\n      content: post.content,\r\n      starList: starList,\r\n      commentList: commentList,\r\n      isStared,\r\n      urls: post.urls\r\n    }\r\n\r\n    res.send({code: 200, message: '获取分享详情数据成功', data})\r\n  } catch (err) {\r\n    res.send({code: 300, message: '获取分享详情数据失败', data: err})\r\n  }\r\n}\r\n\r\n// 统一身份验证\r\nexport const authenticationFunc = async (req, res, next) => {\r\n  if (req.path === '/login') {\r\n    next()\r\n    return\r\n  }\r\n  let passport = req.headers.passport\r\n  let userId = req.headers.userid - 0\r\n  try {\r\n    let result = await User.findOne({id: userId})\r\n    if (result && result.passport && passport === result.passport) {\r\n      next()\r\n    } else {\r\n      res.send({code: 400, message: '身份验证失败', data: {}})\r\n      return\r\n    }\r\n  } catch (err) {\r\n    res.send({code: 400, message: '此账号验证异常，请重新登录', data: {}})\r\n  }\r\n}\r\n"]}