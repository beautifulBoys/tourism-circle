{"version":3,"sources":["../../src/model/user.js"],"names":["userInfo","desc","type","String","default","bg","avatar","email","address","Array","sex","Number","registerTime","Date","loginTime","postNum","accountInfo","id","username","password","passport","status","Boolean","powerInfo","admin","text","power","showInUserList","addFriend","webMail","online","Schemas","Schema","versionKey","model"],"mappings":";;;;;;;;;;AAGA;;;;;;AAEA,IAAMA,WAAW,EAAE;AACfC,UAAM,EAAE;AACJC,cAAMC,MADJ;AAEFC,iBAAS;AAFP,KADO;AAKbC,QAAI,EAAE;AACFH,cAAMC,MADN;AAEAC,iBAAS;AAFT,KALS;AASbE,YAAQ,EAAE;AACNJ,cAAMC,MADF;AAEJC,iBAAS;AAFL,KATK;AAabG,WAAO;AACHL,cAAMC,MADH;AAEHC,iBAAS;AAFN,KAbM;AAiBbI,aAAS;AACLN,cAAMO,KADD;AAELL,iBAAS;AAFJ,KAjBI;AAqBbM,SAAK,EAAC;AACFR,cAAMS,MADL;AAEDP,iBAAS;AAFR,KArBQ;AAyBbQ,kBAAc;AACVV,cAAMW,IADI;AAEVT,iBAAS,IAAIS,IAAJ;AAFC,KAzBD;AA6BbC,eAAW,EAAE;AACTZ,cAAMW,IADC;AAEPT,iBAAS,IAAIS,IAAJ;AAFF,KA7BE;AAiCbE,aAAS;AACLb,cAAMS,MADD;AAELP,iBAAS;AAFJ;AAjCI,CAAjB,C,CALA;;;;AA2CA,IAAMY,cAAc,EAAE;AAClBC,QAAIN,MADY;AAEhBO,cAAUf,MAFM;AAGhBgB,cAAUhB,MAHM;AAIhBiB,cAAU;AACNlB,cAAMC,MADA;AAENC,iBAAS;AAFH,KAJM;AAQhBiB,YAAQ,EAAE;AACNnB,cAAMoB,OADF;AAEJlB,iBAAS;AAFL;AARQ,CAApB;AAaA,IAAMmB,YAAY,EAAE;AAChBC,WAAO,EAAE;AACLtB,cAAM;AACFA,kBAAMS,MADJ;AAEFP,qBAAS;AAFP,SADH;AAKHqB,cAAM;AACFvB,kBAAMC,MADJ;AAEFC,qBAAS;AAFP;AALH,KADO;AAWdsB,WAAO;AACHC,wBAAgB;AACZzB,kBAAMoB,OADM;AAEZlB,qBAAS;AAFG,SADb;AAKHwB,mBAAW,EAAE;AACT1B,kBAAMoB,OADC;AAEPlB,qBAAS;AAFF,SALR;AASHyB,iBAAS,EAAE;AACP3B,kBAAMoB,OADD;AAELlB,qBAAS;AAFJ;AATN,KAXO;AAyBdiB,YAAQ,EAAE;AACNS,gBAAQ,EAAE;AACN5B,kBAAMoB,OADF;AAEJlB,qBAAS;AAFL;AADJ;AAzBM,CAAlB;AAgCA,IAAI2B,UAAU,IAAI,mBAASC,MAAb,4BACPhC,QADO,EAEPgB,WAFO,EAGPO,SAHO,GAIX;AACCU,gBAAY;AADb,CAJW,CAAd;;kBAQe,mBAASC,KAAT,CAAe,MAAf,EAAuBH,OAAvB,C","file":"user.js","sourcesContent":["/**\r\n * Created by user on 2017/3/9.\r\n */\r\nimport mongoose from 'mongoose';\r\n\r\nconst userInfo = { // 用户相关的信息\r\n    desc: { // 碎碎念\r\n        type: String,\r\n        default: ''\r\n    },\r\n    bg: { // 背景图地址\r\n        type: String,\r\n        default: ''\r\n    },\r\n    avatar: { // 头像地址\r\n        type: String,\r\n        default: 'https://raw.githubusercontent.com/beautifulBoys/beautifulBoys.github.io/master/source/tourism-circle/avatar.png'\r\n    },\r\n    email: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    address: {\r\n        type: Array,\r\n        default: []\r\n    },\r\n    sex: {// 男 2   女 1   未设置 0\r\n        type: Number,\r\n        default: 0\r\n    },\r\n    registerTime: {\r\n        type: Date,\r\n        default: new Date()\r\n    },\r\n    loginTime: { // 最后一次登陆时间\r\n        type: Date,\r\n        default: new Date()\r\n    },\r\n    postNum: {\r\n        type: Number,\r\n        default: 0\r\n    }\r\n};\r\nconst accountInfo = { // 用户账户相关的信息\r\n    id: Number,\r\n    username: String,\r\n    password: String,\r\n    passport: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    status: { // 账号当前状态 （冻结则为false）\r\n        type: Boolean,\r\n        default: true\r\n    }\r\n};\r\nconst powerInfo = { // 用户权限相关的信息\r\n    admin: { // 用户级别\r\n        type: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        text: {\r\n            type: String,\r\n            default: '普通用户'\r\n        }\r\n    },\r\n    power: {\r\n        showInUserList: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        addFriend: { // 是否可以被添加为好友\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        webMail: { // 是否接受站内信\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    status: { // 一些用户当前的状态\r\n        online: { // 在线聊 当前是否在线\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    }\r\n};\r\nvar Schemas = new mongoose.Schema({\r\n    ...userInfo,\r\n    ...accountInfo,\r\n    ...powerInfo\r\n}, {\r\n    versionKey: false\r\n});\r\n\r\nexport default mongoose.model('user', Schemas);\r\n"]}