{"version":3,"sources":["../../src/servers/web_chat.js"],"names":["app","require","http","Server","io","onlineUserList","onlineUserCount","on","console","log","socket","obj","socketId","userId","push","newUserMessage","user","id","name","username","avatar","message","type","text","broadcast","emit","exitObj","sign","filter","item","exitUserMessage","port","webChat_port","listen"],"mappings":";;;;;;AAIA;;;;;;AAHA,IAAIA,MAAMC,QAAQ,SAAR,GAAV;AACA,IAAIC,OAAOD,QAAQ,MAAR,EAAgBE,MAAhB,CAAuBH,GAAvB,CAAX;AACA,IAAII,KAAKH,QAAQ,WAAR,EAAqBC,IAArB,CAAT;;;AAGA;AACA,IAAIG,iBAAiB,EAArB;AACA;AACA,IAAIC,kBAAkB,CAAtB;;kBACe,YAAM;AACnBF,KAAGG,EAAH,CAAM,YAAN,EAAoB,kBAAU;AAC5BC,YAAQC,GAAR,CAAY,SAAZ;;AAEA;AACAC,WAAOH,EAAP,CAAU,OAAV,EAAmB,UAAUI,GAAV,EAAe;AAAE;AAClCD,aAAOE,QAAP,GAAkBD,IAAIE,MAAtB;AACAR,qBAAeS,IAAf,CAAoBH,GAApB;AACA;AACA,UAAII,iBAAiB;AACnBC,cAAM;AACJC,cAAIN,IAAIE,MADJ;AAEJK,gBAAMP,IAAIQ,QAFN;AAGJC,kBAAQT,IAAIS;AAHR,SADa;AAMnBC,iBAAS;AACPC,gBAAM,CADC;AAEPC,gBAAM,QAAQZ,IAAIQ,QAAZ,GAAuB;AAFtB;AANU,OAArB;AAWA,WAAKK,SAAL,CAAeC,IAAf,CAAoB,SAApB,EAA+BV,cAA/B;AACA,WAAKU,IAAL,CAAU,cAAV,EAA0B,CAA1B;AACAjB,cAAQC,GAAR,CAAYE,IAAIQ,QAAJ,GAAe,OAA3B;AACD,KAlBD;;AAoBA;AACAT,WAAOH,EAAP,CAAU,YAAV,EAAwB,YAAY;AAClC;AACA,UAAImB,UAAU,EAAd;AACA,UAAIC,OAAO,KAAX;AACAtB,uBAAiBA,eAAeuB,MAAf,CAAsB,gBAAQ;AAC7C,YAAIC,KAAKhB,MAAL,KAAgBH,OAAOE,QAA3B,EAAqCc,UAAUG,IAAV;AACrC,eAAQA,KAAKhB,MAAL,KAAgBH,OAAOE,QAA/B;AACD,OAHgB,CAAjB;AAIAN;AACAE,cAAQC,GAAR,CAAY,SAAZ,EAAuBiB,OAAvB;AACA;AACA,UAAII,kBAAkB;AACpBd,cAAM;AACJC,cAAIS,QAAQb,MADR;AAEJK,gBAAMQ,QAAQP,QAFV;AAGJC,kBAAQM,QAAQN;AAHZ,SADc;AAMpBC,iBAAS;AACPC,gBAAM,CADC;AAEPC,gBAAM,QAAQG,QAAQP,QAAhB,GAA2B;AAF1B;AANW,OAAtB;AAWA,WAAKK,SAAL,CAAeC,IAAf,CAAoB,QAApB,EAA8BK,eAA9B;AACAtB,cAAQC,GAAR,CAAYiB,QAAQP,QAAR,GAAmB,OAA/B;AACD,KAxBD;;AA0BA;AACAT,WAAOH,EAAP,CAAU,SAAV,EAAqB,UAAUI,GAAV,EAAe;AAClC,WAAKa,SAAL,CAAeC,IAAf,CAAoB,SAApB,EAA+Bd,GAA/B,EADkC,CACG;AACrCH,cAAQC,GAAR,CAAYE,IAAIK,IAAJ,CAASE,IAAT,GAAgB,IAAhB,GAAuBP,IAAIU,OAAJ,CAAYE,IAA/C;AACD,KAHD;AAKD,GAzDD;;AA2DA,MAAMQ,OAAO,gBAAOC,YAApB;AACA9B,OAAK+B,MAAL,CAAYF,IAAZ,EAAkB,YAAY;AAC5BvB,YAAQC,GAAR,CAAY,cAAcsB,IAA1B;AACD,GAFD;AAGD,C","file":"web_chat.js","sourcesContent":["\r\nvar app = require('express')();\r\nvar http = require('http').Server(app);\r\nvar io = require('socket.io')(http);\r\nimport config from '../config/index.js';\r\n\r\n//在线用户\r\nvar onlineUserList = [];\r\n//当前在线人数\r\nvar onlineUserCount = 0;\r\nexport default () => {\r\n  io.on('connection', socket => {\r\n    console.log('服务已创建 !');\r\n\r\n    //监听新用户加入\r\n    socket.on('login', function (obj) { // {userId, username, passport, avatar}\r\n      socket.socketId = obj.userId;\r\n      onlineUserList.push(obj);\r\n      //向除自己以外的所有客户端广播:有新用户加入\r\n      let newUserMessage = {\r\n        user: {\r\n          id: obj.userId,\r\n          name: obj.username,\r\n          avatar: obj.avatar\r\n        },\r\n        message: {\r\n          type: 1,\r\n          text: '用户 ' + obj.username + ' 进入房间'\r\n        }\r\n      };\r\n      this.broadcast.emit('comming', newUserMessage);\r\n      this.emit('loginSuccess', 1);\r\n      console.log(obj.username + '加入了群聊');\r\n    });\r\n\r\n    //监听用户退出\r\n    socket.on('disconnect', function () {\r\n      // 将退出的用户从在线列表中删除\r\n      var exitObj = {};\r\n      var sign = false;\r\n      onlineUserList = onlineUserList.filter(item => {\r\n        if (item.userId === socket.socketId) exitObj = item;\r\n        return (item.userId !== socket.socketId);\r\n      });\r\n      onlineUserCount--;\r\n      console.log('exitObj', exitObj);\r\n      //向所有客户端广播用户退出\r\n      let exitUserMessage = {\r\n        user: {\r\n          id: exitObj.userId,\r\n          name: exitObj.username,\r\n          avatar: exitObj.avatar\r\n        },\r\n        message: {\r\n          type: 1,\r\n          text: '用户 ' + exitObj.username + ' 离开房间'\r\n        }\r\n      };\r\n      this.broadcast.emit('logout', exitUserMessage);\r\n      console.log(exitObj.username + '退出了群聊');\r\n    });\r\n\r\n    //监听用户发布聊天内容\r\n    socket.on('message', function (obj) {\r\n      this.broadcast.emit('message', obj); // 广播给自己以外的所有用户\r\n      console.log(obj.user.name + '说：' + obj.message.text);\r\n    });\r\n\r\n  });\r\n\r\n  const port = config.webChat_port;\r\n  http.listen(port, function () {\r\n    console.log('全站聊天室启动: ' + port);\r\n  });\r\n};\r\n"]}